#######################################
2020/10/14 command    2020/10/14  record:
	安装工具包;
	wget -b https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/2.9.2/sratoolkit.2.9.2-centos_linux64.tar.gz
	tar xzvf sratoolkit.2.9.2-centos_linux64.tar.gz
	
	下载原始数据
	nohup prefetch --option-file data/SRR_file/GSE99205.txt -O data/Nuc_data/GSE99205 &
	nohup prefetch --option-file data/SRR_file/GSE107690.txt -O data/Nuc_data/GSE107690 &
	nohup prefetch --option-file data/SRR_file/GSE78984.txt -O data/Nuc_data/GSE78984 &
	
	NCBI下载域名：ftp://ftp-trace.ncbi.nlm.nih.gov/sra
				ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR769/SRR769430/
	wget -b ftp://ftp.sra.ebi.ac.uk/vol1/srr/SRR558/007/SRR5586987

	大部分下载失败
#######################################
2020/10/15 command 2020/10/16 record:
	直接wget下载
	windows下输出的sh脚本的换行符和linux下不同，会导致出现一些错误，最好在linux运行.py文件输出脚本再运行
	脚本文件的任何一个字符都有可能导致错误
	
	python get_GSM_data.py(cd ~/data/script)
	
	nohup bash GSE99205.sh &
	nohup bash GSE107690.sh &
	nohup bash GSE78984.sh &
	
	尝试进行一些高端工具包的下载，yum、doc2linux等，失败
	
	不要同时挂载过多的wget项目，服务器过载影响他人的使用
	
#########################################
2020/10/21 command 2020/10/21 record:
	数据基本下载完成，尚在查漏补缺，准备进行格式转换，获取fasta，fastq格式文件
	
	killall wget 关闭所有在运行的wget项目
	
	test:
	fastq-dump SRR5586990
	sra转换成fasta：fastq-dump --fasta 50 SRR5586990
	将双端测序文件分开：fastq-dump --split-files SRR5586990
	
	脚本文件进行：
	fasterq-dump -e 8 --split-files -O $outpath/fastq_file SRR5586990
	fastq-dump --split-files -O $outpath/fastq_file SRR5586990
	
	SRR2fastq_2.py
	
	CAM的安装以及调试
#########################################
2020/10/22 command 2020/10/28 record: 
    下载ATAC数据以及参考基因组
	human: hg19.fa,hg38.fa
	mice: mm9.fa,mm10.fa
	
	GSE60682
	GSE70751
	wget -c ftp://ftp.sra.ebi.ac.uk/vol1/srr/{}/00{}/{}
	fasterq-dump -e 8 --split-files -O $outpath/fastq_file {}

#########################################
2020/10/27 command 2020/10/28 record:
	准备进行ATAC数据和Nuc数据的比较
	
	尝试使用CAM并获取参考基因组的index
	nohup CAM.py simple -a ../GSE78984/fastq_file/SRR3211621_1.fastq -b ../GSE78984/fastq_file/SRR3211621_2.fastq -n SRR3211621 -t PE -s hg19 --fa /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.fa &
	nohup CAM.py simple -a ../GSE78984/fastq_file/SRR3211621_1.fastq -b ../GSE78984/fastq_file/SRR3211621_2.fastq -n SRR3211621 -t PE -s hg19 --fa /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg38.fa &
	
	mv data/Nuc_data/CAM_re/SRR3211621/annotation data/Bowtie2/hg19
	rm data/Nuc_data/CAM_re/SRR3211621
	mv data/Nuc_data/CAM_re/SRR3211621/annotation data/Bowtie2/hg38
	rm data/Nuc_data/CAM_re/SRR3211621
	
#########################################
2020/10/28 command 2020/10/28 record：
	编写python脚本读取目录文件并且输出shell脚本，运行shell脚本
	CAM.py simple -a $data_path/SRR3211621_1.fastq -b $data_path/SRR3211621_2.fastq -n SRR3211621 -t PE -s hg19 --fa ref_path/hg19.fa --mapindex ref_path/hg19
	python CAM_get_sh.py
	nohup bash CAM_sh.sh &
	
	根据质控报告针对60682进行去接头处理————结果不理想，输出的fastq文件都只有1kb
	cutadapt -a {} -A {} --trim-n -m 50 -q 20,20 -o $output_path/{} -p $output_path/{} -u 10 -U 10 $data_path/{} $data_path/{}
	python cutadapter.py
	nohup bash cutadapter_1.sh &
	
	采用tophat2进行mapping————index文件异常.bt2, .bt21, .ebwt的区别
	tophat2 -m 1 -N 3 --read-edit-dist 3 -p 8 -g 2 -I 50000 --microexon-search --no-coverage-search -G $ref_path/{} -o $output_path/{} /mnt/Storage/home/chenxiaolan/Data/annotation/Bowtie2/hg19  $data_path/{} >> $output_path/{}
	python tophat.py
	nohup bash tophat_2.sh &
	
	错误报告：Error: Could not find Bowtie 2 index files (/mnt/Storage/home/chenxiaolan/Data/annotation/Bowtie2/hg19.*.bt2l)
	

#########################################
2020/10/28 command 2020/10/29 record：	
	构建参考基因组的index
	bowtie-build ~/data/Bowtie2/hg19.fa ~/data/Bowtie2/hg19   => 得到.ebwt
	bowtie2-build ~/data/Bowtie2/hg19.fa ~/data/Bowtie2/hg19   => 得到.bt2
	
	采用bowtie和bowtie2进行mapping
	for i in `seq 23 80`;
	do
	bowtie -p 4 -S -m 1 --sam-RG "ID:sample_${i}" --sam-RG "PL:illumina" --sam-RG "SM:SRR15563${i}" $ref_path/hg19 -1 $data_path/SRR15563${i}_1.fastq -2 $data_path/SRR15563${i}_2.fastq | samtools sort -@ 6 -m 1G -o $output_path/SRR15563${i}_sorted.bam;
	done &
	
	for i in `seq 37 41`;
	do
	bowtie -p 4 -S -m 1 --sam-RG "ID:sample_${i}" --sam-RG "PL:illumina" --sam-RG "SM:SRR20964${i}" $ref_path/hg19 -1 $data_path/SRR20964${i}_1.fastq -2 $data_path/SRR20964${i}_2.fastq | samtools sort -@ 6 -m 1G -o $output_path/SRR20964${i}_sorted.bam;
	done &
	
	
	samtools faidx hg19.fa &

#########################################
2020/10/30 command 2020/10/31 record：	
    搭建虚拟环境，加入nucleoatac
	
	samtools index SRR2095437_sorted.bam
	生成bam文件的索引.bai
	
	激活虚拟环境
	cd ~/.virtualenvs/MynucleoATAC
	source bin/activate
	
	
	运行软件
	nohup nucleoatac run --bed /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_mapping/chrom_access_human_70751/SRR2096437.bed --bam /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_mapping/chrom_access_human_70751/SRR2096437_sorted.bam --fasta /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.fa --out ATAC_analysis &
	
#########################################
2020/11/3 command 2020/11/3 record：
	运行了五天还没有结束，垃圾软件
	
	计算MNase数据的nucleosome occupancy
	nohup python /mnt/Storage/home/chenxiaolan/bin/nuc_profile_to_occupancy_bw.py -g /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.len -p ${inpath}/${name}/preprocess/${name}_profile.bw -n ${outpath}/${name}/${name} -c chr1 &
	
	针对物种以及细胞系下载对应的数据集，用于比较分析
	ATAC数据补充6种，MNase数据不补充，但是之前的CAM分析由于比对基因组出错，重新进行mm的CAM分析
	
	CAM结果输出在summary内，之前的路径有误
	nohup python /mnt/Storage/home/chenxiaolan/bin/nuc_profile_to_occupancy_bw.py -g /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.len -p ${inpath}/${name}/summary/${name}_profile.bw -n ${outpath}/${name}/${name} -c chr1 &
	
#########################################	
2020/11/5 command 2020/11/5 record：
	继续重复性工作
	
	进行数据的统一化，避免细胞异质性带来的误差
	human数据 K562
	小鼠数据 Neural Progenitor Cell
	
	审查nucleoATAC的代码，植入进程标签
	
	nohup nucleoatac run --bed /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_mapping/human_K562/SRR5128071.bed --bam /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_mapping/human_K562/SRR5128071_sorted.bam --fasta /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.fa --out /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_analysis/K562_71 &
	
	bedGraphToBigWig SRR3211679_occupancy.bdg /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.len SRR3211679_occupancy.bw
	
	eval "$(/mnt/Storage/home/zhangjiasheng/anaconda3/bin/conda shell.bash hook)"
	source activate
	
#########################################	
2020/11/6 command 2020/11/10 record：	
	nucleoATAC程序运行方式错误，bed文件应该进行region的筛选
	nohup nucleoatac run --bed /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19_gene6k_sorted.bed --bam /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_mapping/human_K562/SRR5128071_sorted.bam --fasta /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.fa --out /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_analysis/K562_71 &
	
	对nucleoATAC的文件进行排序
	nohup zcat K562_71/K562_71.occ.bedgraph.gz|sort -k1,1 -k2n,2 > K562_71_sorted.occ.bdg &
	
	转化成bw文件
	nohup bedGraphToBigWig K562_71/K562_71_sorted.occ.bdg /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.len K562_71/K562_71_sorted.occ.bw


########################################
2020/11/10 command 2020/11/10 record：	

	开始进行deeptool的分析
	首先将bw文件转化成matrix
	nohup computeMatrix scale-regions -S ~/data/Nuc_data/CAM_re/SRR3211679/summary/SRR3211679_profile.bw -R ~/data/Bowtie2/hg19_gene_sorted.bed --outFileSortedRegions Nuc_analysis/SRR3211679/SRR3211679_matrxi_regions.bed &
	computeMatrix scale-regions -S ~/data/Nuc_data/CAM_re/SRR3211679/summary/SRR3211679_profile.bw -R ~/data/Bowtie2/hg19_gene_sorted.bed --beforeRegionStartLength 3000 --regionBodyLength 5000 --afterRegionStartLength 3000 --skipZeros -o Nuc_analysis/SRR3211679/SRR3211679_matrix.gz
	然后进行profile_plot的绘制
	plotProfile -m Nuc_analysis/SRR3211680/SRR3211680_matrix.gz -out exampleHeatmap1_80.png
	再进行heatmap的绘制
	plotHeatmap -m Nuc_analysis/SRR3211680/SRR3211680_matrix.gz -out exampleHeatmap1_80.png

########################################
2020/11/10 command 2020/11/10 record：	
	考虑不同的computeMatrix参数，生成不同的图谱绘制，如-1k~2k
	
	
########################################
2020/11/12 command 2020/11/12 record：
	G4s数据mapping
	bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR63475${i}" -x $ref_path/hg19_index -U $data_path/SRR63475${i}_1.fastq | samtools sort -@ 6 -m 1G -o $output_path/SRR63475${i}_sorted.bam;
	bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR63475${i}" -x $ref_path/hg19_index -1 $data_path/SRR63475${i}_1.fastq -2 $data_path/SRR63475${i}_2.fastq | samtools sort -@ 6 -m 1G -o $output_path/SRR63475${i}_sorted.bam;
	
	
########################################
2020/11/24 command 2020/11/24 record：	
	python ~/project/compare/script/getBigWigValue_0.py K562_72_matrix /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19_gene6k_sorted.bed 2000 /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_analysis/K562_72/K562_72_sorted.occ.bw
	
	samtools view -c -F 4 ~/data/Nuc_data/CAM_re/SRR3211680/preprocess/SRR3211680.sam
	samtools view -c -F 4 ATAC_mapping/human_K562/SRR5128071_sorted.bam
	
	nohup cat ~/data/Nuc_data/CAM_re/SRR3211681/preprocess/SRR3211681.sam | samtools sort -@ 6 -m 1G -o ~/project/compare/ATAC_Nuc/Nuc_mapping/SRR3211681_sorted.bam &
	
	cat mm9_genome.bed|sort -k1,1 -k2n,2 > mm9_genome_sorted.bed
	
########################################	
2020/11/26 command 2020/11/26 record：
	绘制图像后进行比较，然后上交报告
	
	开始进行G4s的数据处理
	nohup macs2 callpeak --keep-dup all -t G4s_mapping/human_K562/SRR6347556_sorted.bam -c G4s_mapping/human_K562/SRR6347557_sorted.bam -n K562_BG4-ChIP-rep_2c &
	nohup macs2 callpeak --keep-dup all -f BAM -t G4s_mapping/human_K562/SRR6347556_sorted.bam -c G4s_mapping/human_K562/SRR6347557_sorted.bam -n K562_BG4-ChIP-rep_2c -g hs --outdir ~/project/compare/Nuc_G4s/G4s_analysis/foldername --bdg -q 0.05&

	Rscript G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2_model.r

########################################	
2020/11/26 command 2020/11/26 record：
	错误率 error_rate = 错误样本/总样本
	精度 accuracy = 1-error_rate
	均方误差 mean_squared_error = sum((f(xi)-yi)^2)/sum(i)
	混淆矩阵TP,FP,TN,FN
	查准率 P = TP/(TP+FP)
	查全率(召回率) R = TP/(TP+FN) 阳性样本有多少被检索出
	P-R曲线
	TPR = TP/(TP+FN)
	FPR = FP/(TN+FP)
	ROC曲线

########################################	
2020/11/30 command 2020/11/30 record：
	开始写logistics函数
	下载第二批Nuc数据以及G4s数据的预处理
	
	macs2 bdgcmp -t G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_treat_pileup_sorted.bdg -c G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_control_lambda_sorted.bdg --outdir G4s_analysis/K562_BG4-ChIP-rep_2a -o K562_BG4-ChIP-rep_2a_FE.bdg -m FE
	macs2 bdgcmp -t G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_treat_pileup_sorted.bdg -c G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_control_lambda_sorted.bdg --outdir G4s_analysis/K562_BG4-ChIP-rep_2a -o K562_BG4-ChIP-rep_2a_logLR.bdg -m logLR -p 0.00001
	
########################################	
2020/12/2 command 2020/12/2 record：	
	G4peak周围的核小体定位
	以G4 peak summit 为中心画一个average profile
	
	根据G4 peak summit为中心绘制G4 peak(bw)的heatmap，看中心富集程度
	
	computeMatrix scale-regions -S ~/data/Nuc_data/CAM_re/SRR3211682/summary/SRR3211682_profile.bw -R ~/project/compare/Nuc_G4s/K562_2a.bed -b 0 -a 0  -o K562_2a_82_matrix.gz
	computeMatrix reference-point -S ~/data/Nuc_data/CAM_re/SRR3211682/summary/SRR3211682_profile.bw -R ~/project/compare/Nuc_G4s/G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_summits.bed -b 3000 -a 3000  -o K562_2a_82_matrix.gz
	
	核小体图谱不正常——为什么会出现这种图谱


########################################	
2020/12/10 command 2020/12/10 record：
	发现问题，G4数据处理流程有误，似乎未进行去重以及筛选导致后续问题较大
	nohup java -Xmx5g -jar ~/Toolkit/picard/build/libs/picard.jar MarkDuplicates I=G4s_mapping/human_K562/SRR6347554_sorted.bam O=G4s_mapping/human_K562/SRR6347554.clean.bam M=G4s_mapping/log_file/SRR6347554.md.txt &
	
	samtools view -H G4s_mapping/human_K562/noCutBam/SRR6347554.clean.bam > G4s_mapping/human_K562/noCutBam/SRR6347554_filtered.sam
	nohup samtools view -h G4s_mapping/human_K562/noCutBam/SRR6347554.clean.bam | awk '{if($5>=10 && substr($3,1,3)=="chr" && $3!="chrM") print $0;}' >> G4s_mapping/human_K562/noCutBam/SRR6347554_filtered.sam &
	samtools view -bS G4s_mapping/human_K562/noCutBam/SRR6347554_filtered.sam > G4s_mapping/human_K562/noCutBam/SRR6347554.filtered.bam
	rm G4s_mapping/human_K562/noCutBam/SRR6347554_filtered.sam
########################################	
2020/12/12 command 2020/12/13 record：
	采取新的流程针对G4数据重新进行分析，同时比较之前的G4流程的数据，观察结果有何不同，寻找关键性原因
	
	cutadapt -f fastq -e 0.1 -q 20 -O 3 -a CTGTCTCTTATACACATCT -o $output_path/SRR63475${i}_cut.fastq $data_path/SRR63475${i}.fastq
	bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR63475${i}" -x $ref_path/hg19_index -U $data_path/SRR6347550_cut.fastq | samtools sort -@ 6 -m 1G -o $output_path/SRR6347550_sorted.bam;

########################################	
2020/12/15 command 2020/12/15 record：	
	发现问题的根本：被有加入hg19.wgEncodeDukeMapabilityRegionsExcludable.whitelist.bed文件进行region的筛选
	再进行比对分析时，需要考虑去除低复杂度区域序列
	
	bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR63475${i}" -x ~/data/Bowtie2/hg19_index -U /mnt/Storage/home/zhangjiasheng/data/G4s_data/GSE107690/fastq_file/SRR63475${i}_cut.fastq > G4s_mapping/human_K562/test/SRR63475${i}.sam
	samtools view -S -u -b  -F2304 -q 10 -L ~/data/Bowtie2/hg19.wgEncodeDukeMapabilityRegionsExcludable.whitelist.bed G4s_mapping/human_K562/test/SRR63475${i}.sam | samtools sort - -o G4s_mapping/human_K562/test/SRR63475${i}.hg19.tmp 
	java -Xmx5g -jar ~/Toolkit/picard/build/libs/picard.jar MarkDuplicates REMOVE_DUPLICATES=true I=G4s_mapping/human_K562/test/SRR63475${i}.hg19.tmp O=G4s_mapping/human_K562/test/SRR63475${i}.clean.bam M=G4s_mapping/human_K562/test/SRR63475${i}.md.txt
	samtools view -H G4s_mapping/human_K562/test/SRR63475${i}.clean.bam > G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam
	samtools view -h G4s_mapping/human_K562/test/SRR63475${i}.clean.bam | awk '{if($5>=10 && substr($3,1,3)=="chr" && $3!="chrM") print $0;}' >> G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam 
	samtools view -bS G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam > G4s_mapping/human_K562/test/SRR63475${i}.filtered.bam
	rm G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam
	rm G4s_mapping/human_K562/test/SRR63475${i}.sam
	rm G4s_mapping/human_K562/test/SRR63475${i}.hg19.tmp 
	
########################################	
2020/12/17 command 2020/12/17 record：	
	G4s数据的预处理
	macs2 bdgcmp -t G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_treat_pileup.bdg -c G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_control_lambda.bdg --outdir G4s_analysis/K562_BG4-ChIP-rep_2a -o K562_BG4-ChIP-rep_2a_FE.bdg -m FE
	macs2 bdgcmp -t G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_treat_pileup.bdg -c G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_control_lambda.bdg --outdir G4s_analysis/K562_BG4-ChIP-rep_2a -o K562_BG4-ChIP-rep_2a_logLR.bdg -m logLR -p 0.00001

	对ATAC-seq数据也做一次核小体profile。

#########################################
2020/12/17 command 2020/12/20 record:
	ChIP-seq的完整分析流程，获取筛选后的bam文件
	for i in `seq 50 53`;
	do
		bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR63475${i}" -x ~/data/Bowtie2/hg19_index -U /mnt/Storage/home/zhangjiasheng/data/G4s_data/GSE107690/fastq_file/SRR63475${i}_cut.fastq > G4s_mapping/human_K562/test/SRR63475${i}.sam
		samtools view -S -u -b  -F2304 -q 10 -L ~/data/Bowtie2/hg19.wgEncodeDukeMapabilityRegionsExcludable.whitelist.bed G4s_mapping/human_K562/test/SRR63475${i}.sam | samtools sort - -o G4s_mapping/human_K562/test/SRR63475${i}.hg19.tmp 
		java -Xmx5g -jar ~/Toolkit/picard/build/libs/picard.jar MarkDuplicates REMOVE_DUPLICATES=true I=G4s_mapping/human_K562/test/SRR63475${i}.hg19.tmp O=G4s_mapping/human_K562/test/SRR63475${i}.clean.bam M=G4s_mapping/human_K562/test/SRR63475${i}.md.txt
		samtools view -H G4s_mapping/human_K562/test/SRR63475${i}.clean.bam > G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam
		samtools view -h G4s_mapping/human_K562/test/SRR63475${i}.clean.bam | awk '{if($5>=10 && substr($3,1,3)=="chr" && $3!="chrM") print $0;}' >> G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam 
		samtools view -bS G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam > G4s_mapping/human_K562/test/SRR63475${i}.filtered.bam
		rm G4s_mapping/human_K562/test/SRR63475${i}_filtered.sam
		rm G4s_mapping/human_K562/test/SRR63475${i}.sam
	done &
	
	
	ATAC-seq的mapping步骤，不确定是否要去除低复杂度序列
	data_path=~/data/ATAC_data/fastq_file
	ref_path=~/data/Bowtie2
	output_path=~/project/compare/ATAC_Nuc/ATAC_mapping/human_ipsc

	for i in `seq 88 90`;
	do
	bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR20645${i}" -x $ref_path/hg19_index -U $data_path/SRR20645${i}.fastq > $output_path/SRR20645${i}.sam
	samtools view -S -u -b  -F2304 -q 10 -L $ref_path/hg19.wgEncodeDukeMapabilityRegionsExcludable.whitelist.bed $output_path/SRR20645${i}.sam | samtools sort - -o $output_path/SRR20645${i}.bam
	done &
#########################################
2020/12/23 command 2020/12/23 record：
	下载新的ATAC数据和G4 ChIP-seq数据
	对G4 peak结果进行进一步的整理分析

#########################################
2020/12/24 command 2020/12/24 record：
	for i in `seq 69 73`;
	do
	samtools index SRR38229${i}_sorted.bam
	done &
	
#########################################
2020/12/28 command 2020/12/28 record：
	nohup zcat ATAC_analysis/K562_r22/K562_73.occ.bedgraph.gz|sort -k1,1 -k2n,2 > ATAC_analysis/K562_r22/K562_73_sorted.occ.bdg &
	nohup bedGraphToBigWig ATAC_analysis/K562_r22/K562_73_sorted.occ.bdg /mnt/Storage/home/zhangjiasheng/data/Bowtie2/hg19.len ATAC_analysis/K562_r22/K562_73_sorted.occ.bw &
	
	由于一个意外的发现，后续可以考虑稍微扩大观察区间，以便发现核小体的模式
	
#########################################
2021/01/18 command 2021/01/18 record：	
	获取cov
	nohup samtools view -b /mnt/Storage/home/zhangjiasheng/project/compare/ATAC_Nuc/ATAC_mapping/human_K562/SRR5128073_sorted.bam | genomeCoverageBed -ibam stdin -g hg19.genome -bga > 73_cov.bedgraph &
	
	经过初步比较可以看出，人类测序数据的cov普遍比S的低，尚未进行数据整理和总结归纳
	主要的原因是酵母的基因组大小为1.2*10^7，人类为3.0*10^9，人类基因组大小为酵母的200倍
	基因组过大导致ATAC-seq不能进行很深的测序
	
##########################################
2021/03/01 command 2021/03/01 record：
	更改研究内容
	超螺旋结构与G4的关系
	data_path=~/data/TMP_data/GSE123292/fastq_file
	ref_path=~/data/Bowtie2
	output_path=~/project/compare/TMP_seq/TMP_mapping

	for i in `seq 38 52`;
	do
		cutadapt -f fastq -e 0.1 -q 20 -O 3 -g CCCN -o $output_path/SRR89552${i}_cut.fastq $data_path/SRR89552${i}.fastq
		bowtie2 -p 6 --rg-id sample_${i} --rg "PL:ILLUMINA" --rg "SM:SRR89552${i}" -x $ref_path/hg19_index -U $data_path/SRR89552${i}.fastq > $output_path/SRR89552${i}.sam
		samtools view -S -u -b  -F2304 -q 10 -L $ref_path/hg19.wgEncodeDukeMapabilityRegionsExcludable.whitelist.bed $output_path/SRR89552${i}.sam | samtools sort - -o $output_path/SRR89552${i}.hg19.tmp
		java -Xmx5g -jar ~/Toolkit/picard/build/libs/picard.jar MarkDuplicates REMOVE_DUPLICATES=true I=$output_path/SRR89552${i}.hg19.tmp O=$output_path/SRR89552${i}.clean.bam M=$output_path/SRR63475${i}.md.txt
		rm $output_path/SRR89552${i}.hg19.tmp
	done &
	
##########################################
2021/03/10 command 2021/03/10 record：
	调用G4Hunter
	python Toolkit/G4Hunter/G4Hunter.py -i ~/results.txt -o ~/project/prediction -w 25 -s 1.5
	
	根据G4 peak region获取sequence
	nohup bedtools getfasta -fi ~/data/Bowtie2/hg19.fa -bed /mnt/Storage/home/zhangjiasheng/project/compare/Nuc_G4s/G4s_analysis/K562_BG4-ChIP-rep_2a/K562_BG4-ChIP-rep_2a_peaks.narrowPeak -fo results.txt &
	
	根据sequence采用G4Hunter以及pqsfinder各自预测G4 motif标记正负链
	
	
##########################################
2021/03/18 command 2021/03/18 record:
	获取20个sample的summits和peak信息
	对merge的peak回溯到这些peak的数据上，进行分类


###########################################
2021/4/8 record
	in vivo G4 motif的验证
	可以用全基因组G4的motif绘制一个分布图，或者occupancy图，区别于ChIP-seq的做出来的图
	可以着手绘制ROC曲线了
	可以进行gene TSS上下游细分到bp的G4 motif 分值图
	同时我们可以进行summits上下游或者peak内部的G4 motif 的分值图
	coverage的统计map
	igv的信号值图谱

############################################
2021/4/8 record
	一、关于G4结构稳定下的实验
	G4结构不仅仅是序列决定的，它存在一个稳定性，他应该是动态的，
	从RNA-seq和G4 ChIP-seq两组数据上很难得出pol II与G4的关系，
	因为pol II完全可以通过金属离子等作用使得G4结构解开。
	个人觉得应该确定一个使G4稳定的环境，如K+环境以及PDS，然后进行RNA-seq
	如果存在G4的gene表达下调，说明G4确实能够阻挡pol II，
	而如果正常情况下的RNA-seq表达正常，则预示着pol II具备能够使得G4解开的功能
	再假设这个结论成立，pol II解开G4，G4上存储的扭力应当向下传导，会导致下游出现结构上的变构
	甚至于，考虑到双螺旋的存在，是否可能将一条链上的力传导到另外一条链上
	二、更精细的G4与转录的关系研究
	可以更多的考虑转录的起始、延伸和终止过程中G4的作用区别
	将TSS上下游的不同区域进行划分，针对不同区域进行分类统计，以期表现有所不同
	或许能够以单bp为单位，计算该位点存在的G4 motif在正负链的差别，不同gene进行总计，获得信号值
	三、RNA pol停滞
	如果G4能够阻挡RNA pol，那么RNA pol应当在G4位点的上游富集或者上调。
	考虑RNA pol occupancy
	类似于做DNA pol 的阻碍模型
	四、G4作为转录调节因子的锚点
	五、G4与gene的特异性
	在不同gene上表现能力不同，位点分布不同，可能就难以研究出什么，
	所以可能可以在特定gene层面上进行单链DNA核酸的实验，检测G4和一些factor的亲和力。
	截取特定位点的G4 motif进行单链DNA核酸的实验
	可以先采用对应factor或者其他蛋白的ChIP-seq，将这个结果的peak区域与G4 motif比较
	找出G4 motif或者G4富集的这些factor再进行进一步的实验
	同时可以针对这些基因做一些功能富集分析
	六、G4作为药靶
	G4 ligands能够引发DNA损伤修复，尤其在部分癌细胞内敏感性上升
	G4解旋酶以及G4稳定剂PDS的作用，抑制G4解旋酶或者加入PDS能够使得G4结构稳定，
	进而使基因组变得不稳定，同时诱发DNA损伤以及损伤修复。
	七、G4作为复制起始位点的作用
	目前发现G4 motifs在复制起始位点富集
	可以考虑做起始位点的单核苷酸与G4 ligands的结合亲和力的实验
	
	胚胎发育
	G4和胚胎发育
	G4的荧光标记，在不同胚胎时期的G4分布状况
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	